# -*- coding: utf-8 -*-
"""Movie Recco System.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1adBOu-ecNGDqk-siKt5mGjsC8ANrECkf
"""



import numpy
import pandas as pd
from sklearn.feature_extraction.text import CountVectorizer
from nltk.stem.porter import PorterStemmer
from sklearn.metrics.pairwise import cosine_similarity

d1 = pd.read_csv('netflix_titles.csv')
d2 = pd.read_csv('amazon_prime_titles.csv')
df = pd.concat([d1,d2],ignore_index=True)

shows = df[['show_id','type','title','director','cast','description']]
shows['description'] = shows['description'].apply(lambda x:x.split())
shows=shows.dropna()

shows['cast'] = shows['cast'].apply(lambda x: x.split(', '))
shows['cast'] = shows['cast'].apply(lambda x:[i.replace(" ","") for i in x])
shows['director'] = shows['director'].apply(lambda x: x.split(', '))
shows['director'] = shows['director'].apply(lambda x:[i.replace(" ","") for i in x])

shows['tags'] = shows['description']+shows['director']+shows['cast']

shows = shows[['show_id','type','title','tags']]
shows['tags'] = shows['tags'].apply(lambda x:" ".join(x))
shows['tags'] = shows['tags'].apply(lambda x:x.lower())

ps = PorterStemmer()


def stem(text):
    lis=[]
    for i in text.split():
        lis.append(ps.stem(i))
    return " ".join(lis)


shows["tags"] = shows['tags'].apply(stem)

cv = CountVectorizer(max_features=5000,stop_words="english")
vectors = cv.fit_transform(shows['tags']).toarray()

# print(list(cv.get_feature_names_out()))

similarity = cosine_similarity(vectors)

def main_func(movie):
    movie_index = shows[shows['title']==movie].index[0]
    distances = similarity[movie_index]
    movie_lists = sorted(list(enumerate(distances)),reverse=True,key=lambda x:x[1])[1:6]
    for i in movie_lists:
       print( shows.iloc[i[0]].title)

main_func('My Girl')

import pickle

pickle.dump(shows.to_dict(),open("listmovie.pkl","wb"))

pickle.dump(similarity,open("similarity.pkl","wb"))